# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proxy.v1 import proxy_pb2 as proxy_dot_v1_dot_proxy__pb2


class ProxyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProxies = channel.unary_unary(
                '/proxy.v1.ProxyService/GetProxies',
                request_serializer=proxy_dot_v1_dot_proxy__pb2.GetProxiesRequest.SerializeToString,
                response_deserializer=proxy_dot_v1_dot_proxy__pb2.GetProxiesResponse.FromString,
                )
        self.CreateProxy = channel.unary_unary(
                '/proxy.v1.ProxyService/CreateProxy',
                request_serializer=proxy_dot_v1_dot_proxy__pb2.CreateProxyRequest.SerializeToString,
                response_deserializer=proxy_dot_v1_dot_proxy__pb2.CreateProxyResponse.FromString,
                )
        self.DeleteProxy = channel.unary_unary(
                '/proxy.v1.ProxyService/DeleteProxy',
                request_serializer=proxy_dot_v1_dot_proxy__pb2.DeleteProxyRequest.SerializeToString,
                response_deserializer=proxy_dot_v1_dot_proxy__pb2.DeleteProxyResponse.FromString,
                )
        self.GetRandomProxy = channel.unary_unary(
                '/proxy.v1.ProxyService/GetRandomProxy',
                request_serializer=proxy_dot_v1_dot_proxy__pb2.GetRandomProxyRequest.SerializeToString,
                response_deserializer=proxy_dot_v1_dot_proxy__pb2.GetRandomProxyResponse.FromString,
                )
        self.SetCooldown = channel.unary_unary(
                '/proxy.v1.ProxyService/SetCooldown',
                request_serializer=proxy_dot_v1_dot_proxy__pb2.SetCooldownRequest.SerializeToString,
                response_deserializer=proxy_dot_v1_dot_proxy__pb2.SetCooldownResponse.FromString,
                )
        self.ResetCooldown = channel.unary_unary(
                '/proxy.v1.ProxyService/ResetCooldown',
                request_serializer=proxy_dot_v1_dot_proxy__pb2.ResetCooldownRequest.SerializeToString,
                response_deserializer=proxy_dot_v1_dot_proxy__pb2.ResetCooldownResponse.FromString,
                )


class ProxyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetProxies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProxy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProxy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRandomProxy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCooldown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetCooldown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProxyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProxies': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProxies,
                    request_deserializer=proxy_dot_v1_dot_proxy__pb2.GetProxiesRequest.FromString,
                    response_serializer=proxy_dot_v1_dot_proxy__pb2.GetProxiesResponse.SerializeToString,
            ),
            'CreateProxy': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProxy,
                    request_deserializer=proxy_dot_v1_dot_proxy__pb2.CreateProxyRequest.FromString,
                    response_serializer=proxy_dot_v1_dot_proxy__pb2.CreateProxyResponse.SerializeToString,
            ),
            'DeleteProxy': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProxy,
                    request_deserializer=proxy_dot_v1_dot_proxy__pb2.DeleteProxyRequest.FromString,
                    response_serializer=proxy_dot_v1_dot_proxy__pb2.DeleteProxyResponse.SerializeToString,
            ),
            'GetRandomProxy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRandomProxy,
                    request_deserializer=proxy_dot_v1_dot_proxy__pb2.GetRandomProxyRequest.FromString,
                    response_serializer=proxy_dot_v1_dot_proxy__pb2.GetRandomProxyResponse.SerializeToString,
            ),
            'SetCooldown': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCooldown,
                    request_deserializer=proxy_dot_v1_dot_proxy__pb2.SetCooldownRequest.FromString,
                    response_serializer=proxy_dot_v1_dot_proxy__pb2.SetCooldownResponse.SerializeToString,
            ),
            'ResetCooldown': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetCooldown,
                    request_deserializer=proxy_dot_v1_dot_proxy__pb2.ResetCooldownRequest.FromString,
                    response_serializer=proxy_dot_v1_dot_proxy__pb2.ResetCooldownResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proxy.v1.ProxyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProxyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetProxies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxy.v1.ProxyService/GetProxies',
            proxy_dot_v1_dot_proxy__pb2.GetProxiesRequest.SerializeToString,
            proxy_dot_v1_dot_proxy__pb2.GetProxiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProxy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxy.v1.ProxyService/CreateProxy',
            proxy_dot_v1_dot_proxy__pb2.CreateProxyRequest.SerializeToString,
            proxy_dot_v1_dot_proxy__pb2.CreateProxyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProxy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxy.v1.ProxyService/DeleteProxy',
            proxy_dot_v1_dot_proxy__pb2.DeleteProxyRequest.SerializeToString,
            proxy_dot_v1_dot_proxy__pb2.DeleteProxyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRandomProxy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxy.v1.ProxyService/GetRandomProxy',
            proxy_dot_v1_dot_proxy__pb2.GetRandomProxyRequest.SerializeToString,
            proxy_dot_v1_dot_proxy__pb2.GetRandomProxyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCooldown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxy.v1.ProxyService/SetCooldown',
            proxy_dot_v1_dot_proxy__pb2.SetCooldownRequest.SerializeToString,
            proxy_dot_v1_dot_proxy__pb2.SetCooldownResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetCooldown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proxy.v1.ProxyService/ResetCooldown',
            proxy_dot_v1_dot_proxy__pb2.ResetCooldownRequest.SerializeToString,
            proxy_dot_v1_dot_proxy__pb2.ResetCooldownResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

{
  "paths_new": {
    "/monitor/betaaccess": {
      "post": {
        "description": "Requesting Access for Beta-Testing"
      },
      "parameters": [
        {
          "name": "e-mail",
          "in": "body",
          "description": "e-mail",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Request sent successfully",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "404a": {
          "description": "E-Mail already requested Beta-Testing-Access",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "404b": {
          "description": "E-Mail missing",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "500": {
          "description": "Unexpected Server Error",
          "schema": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Object",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a User",
        "operationId": "createUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User to Create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created User Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200_1"
            }
          },
          "400": {
            "description": "\\'username\\' is already existing | \\'mail\\' is already in use",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a User",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted User",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update a User",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "User to Update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated User Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200"
            }
          },
          "400": {
            "description": "\\'username\\' is already existing | \\'mail\\' is already in use",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/user/services": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Services a User has Access to",
        "operationId": "getServicesAccess",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Services",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/user/confirmation-notimplemented": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Confirm a Users Mail",
        "operationId": "confirmMail",
        "parameters": [
          {
            "in": "body",
            "name": "id",
            "description": "id for Confirmation",
            "required": true,
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmed Mail",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "404": {
            "description": "\\'confirmationId\\' invalid",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login for a User",
        "operationId": "loginUser",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User to Login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login Successfull",
            "schema": {
              "$ref": "#/definitions/inline_response_200_1"
            }
          },
          "400": {
            "description": "\\'username\\' or \\'password\\' missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout a User",
        "operationId": "logoutUser",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout Successfull",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get a new AccessToken",
        "operationId": "refreshToken",
        "parameters": [
          {
            "in": "body",
            "name": "refreshToken",
            "description": "RefreshToken",
            "required": true,
            "schema": {
              "$ref": "#/definitions/refreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh Successfull",
            "schema": {
              "$ref": "#/definitions/inline_response_200_3"
            }
          },
          "400": {
            "description": "\\'refreshToken\\' expired | \\'refreshToken\\' invalid | \\'refreshToken\\' missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/monitor": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "summary": "Get the User specific Monitor Object",
        "operationId": "getMonitor",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Monitor Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200_4"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "404": {
            "description": "Object is not existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Monitor"
        ],
        "summary": "Get Access to Monitor",
        "operationId": "getMonitorAccess",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "serviceAccessKey",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceAccessKey"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New Monitor Object and new AccessToken",
            "schema": {
              "$ref": "#/definitions/inline_response_200_5"
            }
          },
          "400": {
            "description": "serviceAccessToken invalid or already used",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "404": {
            "description": "Access to Monitor is already existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Monitor"
        ],
        "summary": "Update the User specific Monitor Object",
        "operationId": "updateMonitor",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "monitor",
            "description": "Monitor to Update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/monitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated User Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200_4"
            }
          },
          "400": {
            "description": "No property of \\'webHook\\', \\'name\\' or \\'imageUrl\\' given",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "404": {
            "description": "Object is not existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/monitor/testmessage": {
      "post": {
        "tags": [
          "Monitor"
        ],
        "summary": "Create the User specific Monitor Object",
        "operationId": "sendTestmessage",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Created Monitor Object",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Monitor Webhook is not configured | Monitor is not existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/monitor/items": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "summary": "Get the User specific MonitoredItem Objects",
        "operationId": "getMonitoredItems",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of MonitoredItem Objects",
            "schema": {
              "$ref": "#/definitions/inline_response_200_6"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Monitor"
        ],
        "summary": "Create a User specific MonitoredItem Object",
        "operationId": "createMonitoredItem",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "monitoredItem",
            "description": "monitoredItem to Create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MonitoredItemCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created MonitoredItem Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200_7"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Input is wrong or already existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/monitor/items/{id}": {
      "delete": {
        "tags": [
          "Monitor"
        ],
        "summary": "Delete a User specific MonitoredItem Object",
        "operationId": "deleteMonitoredItem",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "site",
            "description": "site of product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted MonitoredItem",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "404": {
            "description": "Object is not existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Monitor"
        ],
        "summary": "Update a User specific MonitoredItem Object",
        "operationId": "updateMonitoredItem",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "monitoredItem",
            "description": "monitoredItem to update",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MonitoredItemUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated MonitoredItem Object",
            "schema": {
              "$ref": "#/definitions/inline_response_200_7"
            }
          },
          "400": {
            "description": "No property of \\'price\\' or \\'activeStatus\\' given",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "404": {
            "description": "Object is not existing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    },
    "/monitor/products": {
      "get": {
        "tags": [
          "Monitor"
        ],
        "summary": "Get all SupportedProduct Objects for the Monitor Service",
        "operationId": "getSupportedProductsMonitorService",
        "parameters": [
          {
            "name": "Authentication",
            "in": "header",
            "description": "accessToken",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of SupportedProduct Objects",
            "schema": {
              "$ref": "#/definitions/inline_response_200_8"
            }
          },
          "401": {
            "description": "Token expired | Token invalid | Token missing",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          },
          "500": {
            "description": "Unexpected Server Error",
            "schema": {
              "$ref": "#/definitions/inline_response_401"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserObject": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserCreate": {
      "type": "object",
      "required": [
        "mail",
        "password",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "required": [
        "oldPassword"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      }
    },
    "MonitorObject": {
      "type": "object",
      "properties": {
        "webHook": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        }
      }
    },
    "MonitoredItemObject": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "product": {
          "$ref": "#/definitions/SupportedProductObject"
        }
      }
    },
    "MonitoredItemCreate": {
      "type": "object",
      "required": [
        "price",
        "productId"
      ],
      "properties": {
        "price": {
          "type": "number"
        },
        "productId": {
          "type": "string"
        },
        "site": {
          "type": "string"
        }
      }
    },
    "MonitoredItemUpdate": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number"
        },
        "site": {
          "type": "string"
        }
      }
    },
    "SupportedProductObject": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "site": {
          "type": "string"
        },
        "soldOut": {
          "type": "boolean"
        }
      }
    },
    "ServiceObject": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "normalPrice": {
          "type": "number"
        },
        "price": {
          "type": "number"
        },
        "hasSpecialPrice": {
          "type": "boolean"
        },
        "billingType": {
          "type": "string",
          "enum": [
            "oneTime",
            "yearly",
            "monthly"
          ]
        }
      }
    },
    "inline_response_200": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserObject"
        }
      }
    },
    "inline_response_401": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "inline_response_200_1": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserObject"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "inline_response_200_2_services": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "inline_response_200_2": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inline_response_200_2_services"
          }
        }
      }
    },
    "id": {
      "type": "object",
      "properties": {
        "confirmationId": {
          "type": "string"
        }
      }
    },
    "refreshToken": {
      "type": "object",
      "required": [
        "refreshToken"
      ],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "inline_response_200_3": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "inline_response_200_4": {
      "type": "object",
      "properties": {
        "monitor": {
          "$ref": "#/definitions/MonitorObject"
        }
      }
    },
    "serviceAccessKey": {
      "type": "object",
      "properties": {
        "serviceAccessKey": {
          "type": "string"
        }
      }
    },
    "inline_response_200_5": {
      "type": "object",
      "properties": {
        "monitor": {
          "$ref": "#/definitions/MonitorObject"
        },
        "accessToken": {
          "type": "string"
        }
      }
    },
    "monitor": {
      "type": "object",
      "properties": {
        "webHook": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        }
      }
    },
    "inline_response_200_6": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredItemObject"
          }
        }
      }
    },
    "inline_response_200_7": {
      "type": "object",
      "properties": {
        "item": {
          "$ref": "#/definitions/MonitoredItemObject"
        }
      }
    },
    "site": {
      "type": "object",
      "properties": {
        "site": {
          "type": "string"
        }
      }
    },
    "inline_response_200_8_products": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "site": {
          "type": "string"
        },
        "soldOut": {
          "type": "boolean"
        }
      }
    },
    "inline_response_200_8": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inline_response_200_8_products"
          }
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Token expired | Token invalid | Token missing",
      "schema": {
        "$ref": "#/definitions/inline_response_401"
      }
    },
    "InvalidCredentialsError": {
      "description": "Invalid credentials",
      "schema": {
        "$ref": "#/definitions/inline_response_401"
      }
    },
    "TokenInvalidError": {
      "description": "Token invalid",
      "schema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "ObjectNotExistingError": {
      "description": "Object is not existing",
      "schema": {
        "$ref": "#/definitions/inline_response_401"
      }
    },
    "ServerError": {
      "description": "Unexpected Server Error",
      "schema": {
        "$ref": "#/definitions/inline_response_401"
      }
    }
  }
}